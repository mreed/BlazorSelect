@inherits SelectBase
<Styled @bind-Classname="BlazorSelect_input">
    margin: 2px;
    padding-bottom: 2px;
    padding-top: 2px;
    visibility: @(isDisabled ? "hidden" : "visible");
    color: hsl(0,0%,20%);
</Styled>
<div class="@BlazorSelect_input">
    <AutoSize @ref="inputRef"  value="@value" minWidth="40" OnNewInput="@OnInternalInputChange" />
</div>


@code {
    [CascadingParameter(Name = "isDisabled")]
    public bool isDisabled { get; set; }
    [CascadingParameter(Name = "IndicatorDownClicked")]
    public bool IndicatorDownClicked { get; set; }
    private string BlazorSelect_input;
    [Parameter]
    public string value { get; set; }
    [Parameter]
    public EventCallback<ChangeEventArgs> OnValueChange { get; set; }
    AutoSize inputRef { get; set; }

    protected override void OnInitialized()
    {
        Name = "Input";
        base.OnInitialized();
    }

    protected async void OnInternalInputChange(ChangeEventArgs e) {
        value = e.Value.ToString();
        await OnValueChange.InvokeAsync(e);
    }
    public async Task Focus()
    {
        await inputRef.Focus();
    }
    protected override bool ShouldRender()
    {
        if (IndicatorDownClicked) return false;
        return base.ShouldRender();
    }

}